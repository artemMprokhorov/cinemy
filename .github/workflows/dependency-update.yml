name: Dependency Update

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  # Check for dependency updates
  check-updates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.6

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Check for dependency updates
        run: ./gradlew dependencyUpdates

      - name: Generate dependency report
        run: ./gradlew dependencyUpdates --reports

      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-updates
          path: app/build/reports/dependencyUpdates/

  # Create PR for updates
  create-pr:
    needs: check-updates
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.6

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Download dependency report
        uses: actions/download-artifact@v4
        with:
          name: dependency-updates
          path: app/build/reports/dependencyUpdates/

      - name: Check if updates are available
        id: check-updates
        run: |
          if [ -f "app/build/reports/dependencyUpdates/report.txt" ]; then
            UPDATES=$(grep -c "Available:" app/build/reports/dependencyUpdates/report.txt || echo "0")
            echo "updates=$UPDATES" >> $GITHUB_OUTPUT
            echo "Found $UPDATES dependency updates"
          else
            echo "updates=0" >> $GITHUB_OUTPUT
            echo "No dependency updates found"
          fi

      - name: Create Pull Request
        if: steps.check-updates.outputs.updates != '0'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'chore: update dependencies'
          body: |
            ## Dependency Updates
            
            This PR updates the following dependencies:
            
            <details>
            <summary>Click to see dependency updates</summary>
            
            ```
            $(cat app/build/reports/dependencyUpdates/report.txt)
            ```
            
            </details>
            
            ### Changes
            - Automated dependency updates
            - Generated by GitHub Actions
            
            ### Checklist
            - [ ] Tests pass
            - [ ] No breaking changes
            - [ ] Security review completed
            
            ---
            *This PR was automatically created by the [Dependency Update workflow](.github/workflows/dependency-update.yml)*
          branch: dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated
            chore
          assignees: ${{ github.repository_owner }}
          reviewers: ${{ github.repository_owner }}
